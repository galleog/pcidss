{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Schema JSON for j8583",
  "type": "object",
  "properties": {
    "headers": {
      "description": "Additional headers for new ISO8583 messages",
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/$defs/header" }
    },
    "templates": {
      "description": "Templates for new messages",
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/$defs/template" }
    },
    "parses": {
      "description": "Parsing templates for incoming messages",
      "type": "array",
      "minItems": 1,
      "items": { "$ref": "#/$defs/parse" }
    }
  },
  "anyOf": [
    { "required": ["headers"] },
    { "required": ["templates"] },
    { "required": ["parses"] }
  ],
  "additionalProperties": false,

  "$defs": {
    "header": {
      "description": "ISO header after which the message type and the rest of the message must come",
      "type": "object",
      "properties": {
        "type": {
          "description": "ISO type for messages the header is applied to",
          "$ref": "#/$defs/isoType"
        },
        "ref": {
          "description": "ISO type for another header that has the same value. That header can be in another configuration file",
          "$ref": "#/$defs/isoType"
        },
        "binary": {
          "description": "Indicates if the header is binary",
          "type": "boolean"
        },
        "value": {
          "description": "Header's value. Can be omitted if the header isn't needed",
          "type": "string",
          "minLength": 0
        }
      },
      "required": ["type"],
      "additionalProperties": false
    },

    "template": {
      "description": "Template for new messages with the fields that the messages should include",
      "type": "object",
      "properties": {
        "type": {
          "description": "ISO type for messages that should be created with this template",
          "$ref": "#/$defs/isoType"
        },
        "extends": {
          "description": "ISO type for an existing template this one extends. It can refer to the same template in another configuration file",
          "$ref": "#/$defs/isoType"
        },
        "fields": {
          "description": "Fields new messages of this type contain",
          "type": "array",
          "items": { "$ref": "#/$defs/field" }
        }
      },
      "required": ["type"],
      "additionalProperties": false
    },

    "parse": {
      "description": "Defines a parsing template for a message type. It includes all the fields an incoming message can contain",
      "type": "object",
      "properties": {
        "type": {
          "description": "ISO type of incoming messages the parsing rules are applied to. It can be omitted if the rules are for all message types",
          "$ref": "#/$defs/isoType"
        },
        "extends": {
          "description": "ISO type for an existing parsing template this one extends. It can refer to the same template in another configuration file or be 'untyped' if this template extends a one without any type",
          "anyOf": [
            {
              "$ref": "#/$defs/isoType"
            },
            {
              "enum": ["untyped"]
            }
          ]
        },
        "fields": {
          "description": "Fields incoming messages of this type contain",
          "type": "array",
          "items": { "$ref": "#/$defs/field" }
        }
      },
      "additionalProperties": false
    },

    "field": {
      "description": "Field that an incoming or outgoing message can contain with its type and length (if needed)",
      "type": "object",
      "properties": {
        "num": {
          "description": "Ordinal number of the field in a message",
          "type": "integer",
          "minimum": 2,
          "maximum": 192
        },
        "type": {
          "description": "Possible value type used in the field or 'exclude' if the field should be excluded from a template",
          "enum": [
            "ALPHA",
            "NUMERIC",
            "AMOUNT",
            "DATE4",
            "DATE6",
            "DATE10",
            "DATE12",
            "DATE14",
            "DATE_EXP",
            "TIME",
            "LLVAR",
            "LLLVAR",
            "LLLLVAR",
            "BINARY",
            "LLBIN",
            "LLLBIN",
            "LLLLBIN",
            "LLBCDBIN",
            "LLLBCDBIN",
            "LLLLBCDBIN",
            "exclude"
          ]
        },
        "length": {
          "description": "Length of the field. Only ALPHA and NUMERIC types need to have a length specified. The other types either have a fixed length, or have their length specified as part of the field (LLVAR and LLLVAR)",
          "type": "integer",
          "minimum": 1
        },
        "tz": {
          "description": "Timezone useful for date fields",
          "type": "string",
          "minLength": 1
        },
        "value": {
          "description": "Default value of the field when creating messages",
          "type": "string",
          "minLength": 1
        },
        "subfields": {
          "description": "Subfields if the field acts as a container for several ISO values",
          "type": "array",
          "minItems": 2,
          "items": { "$ref": "#/$defs/field" }
        }
      },
      "required": ["num", "type"],
      "oneOf": [
        {
          "not": {
            "anyOf": [
              { "required": ["value"] },
              { "required": ["subfields"] }
            ]
          }
        },
        {
          "required": ["value"],
          "not": { "required": ["subfields"] }
        },
        {
          "required": ["subfields"],
          "not": { "required": ["value"]}
        }
      ],
      "additionalProperties": false
    },

    "isoType": {
      "type": "string",
      "pattern": "^[0-9]+$",
      "minLength": 3,
      "maxLength": 4
    }
  }
}